rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to validate attendance data structure
    function isValidAttendance() {
      let data = request.resource.data;
      return data.keys().hasAll(['date', 'classId', 'presentStudents']) &&
             data.date is string &&
             data.classId is string &&
             data.presentStudents is list;
    }

    // Classes collection
    match /classes/{classId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() &&
                      request.resource.data.keys().hasAll(['name', 'students']) &&
                      request.resource.data.name is string &&
                      request.resource.data.students is list;
      allow update: if isAuthenticated() &&
                      resource.data.keys().hasAll(['name', 'students']);
      allow delete: if isAuthenticated();
    }

    // Attendance collection
    match /attendance/{attendanceId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isValidAttendance();
      allow update: if isAuthenticated() && 
                      isValidAttendance() &&
                      resource.data.classId == request.resource.data.classId;
      allow delete: if isAuthenticated();
    }

    // Reports collection (if you decide to cache reports)
    match /reports/{reportId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Block access to all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}